import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import Link from "next/link";
import { logoutUser } from '../actions/users';
import { cookies } from 'next/headers';
import { redirect } from 'next/navigation';

export const dynamic = 'force-dynamic';

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};
 
export default function RootLayout({ children }) {
  const cookieStore = cookies();
  const userEmail = cookieStore.get('user')?.value;

  return (
    <html lang='en'>
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        <nav className='p-4 bg-gray-100'>
          <ul className='flex space-x-4'>
            <li>
              <Link href='/' className='text-blue-600 hover:underline'>
                Home
              </Link>
            </li>
            <li>
              <Link href='/about' className='text-blue-600 hover:underline'>
                About
              </Link>
            </li>
            <li>
              <Link href='/contact' className='text-blue-600 hover:underline'>
                Contact
              </Link>
            </li>
            <li>
              <Link href='/register' className='text-blue-600 hover:underline'>
                Register
              </Link>
            </li>
            {!userEmail ? (
              <li><Link href="/login" className='text-blue-600 hover:underline'
              >Login</Link></li>
            ) : (
              <li className="text-blue-600">Welcome, {userEmail}</li>
            )}
            <li>
              <form action={async (formData) => {
                'use server';
                const result = await logoutUser();
                if (result?.redirect) {
                  return redirect(result.redirect);
                }
              }} className="inline">
              {!userEmail ? (
                <span className=""></span>
              ) : (
                <button type="submit" className="text-blue-600 hover:underline">
                  Logout
                </button>
              )}  
              </form>
            </li>
          </ul>
        </nav>
        {children}
      </body>
    </html>
  );
}